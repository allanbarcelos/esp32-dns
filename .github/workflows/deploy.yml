name: Build and Publish ESP32 Firmware

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - main
    paths:
      - '**/*.ino'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      - name: Install ESP32 core
        run: |
          arduino-cli config init
          arduino-cli config set library.enable_unsafe_install true
          arduino-cli config add board_manager.additional_urls https://dl.espressif.com/dl/package_esp32_index.json
          arduino-cli core update-index
          arduino-cli core install esp32:esp32@2.1.3

      - name: Install libraries
        run: |
          arduino-cli lib update-index
          arduino-cli lib install "ArduinoJson@7.2.0"
          arduino-cli lib install "ArduinoWebsockets@0.5.4"

      - name: Generate secrets.h
        run: |
          echo '#ifndef SECRETS_H' > secrets.h
          echo '#define SECRETS_H' >> secrets.h
          echo '' >> secrets.h
          echo 'const char* ssid = "${{ secrets.WIFI_SSID }}";' >> secrets.h
          echo 'const char* password = "${{ secrets.WIFI_PASS }}";' >> secrets.h
          echo "const char* firmware_version = \"v${{ github.run_number }}\";" >> secrets.h
          echo '' >> secrets.h
          echo '#endif' >> secrets.h

      - name: Compile firmware (ESP32 Generic)
        run: |
          arduino-cli compile \
            --fqbn esp32:esp32:esp32 \
            --build-property build.flags.optimize.lto=true \
            --build-property build.flags.optimize.size=true \
            --output-dir build

      - name: Find generated firmware bin
        id: firmware
        run: |
          BIN=$(find build -name "*.bin" | head -n1)
          echo "FIRMWARE_BIN=$BIN" >> $GITHUB_ENV

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware-bin
          path: ${{ env.FIRMWARE_BIN }}

      - name: Create GitHub Release and upload firmware
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: ESP32 Firmware Build ${{ github.run_number }}
          files: ${{ env.FIRMWARE_BIN }}
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GHR_TOKEN }}
