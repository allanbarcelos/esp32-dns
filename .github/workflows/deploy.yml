name: Build and Publish ESP32 Firmware

permissions:
  contents: write
  pages: write
  id-token: write

on:
  push:
    branches:
      - main
    paths:
      - '**/*.ino'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Arduino CLI
        uses: arduino/setup-arduino-cli@v1

      - name: Install ESP32 core
        run: |
          arduino-cli config init
          arduino-cli config set library.enable_unsafe_install true
          arduino-cli config add board_manager.additional_urls https://dl.espressif.com/dl/package_esp32_index.json
          arduino-cli core update-index
          arduino-cli core install esp32:esp32@2.1.3

      - name: Install libraries
        run: |
          arduino-cli lib update-index
          arduino-cli lib install "ArduinoJson@7.2.0"
          arduino-cli lib install "ArduinoWebsockets@0.5.4"

      - name: Get highest tag and increment
        id: version
        run: |
          all_tags=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${GITHUB_REPOSITORY}/tags?per_page=100 | jq -r '.[].name')
          echo "$all_tags"
          last_tag=$(echo "$all_tags" | grep -E '^v[0-9]+$' | sed 's/v//' | sort -nr | head -1)
          new_version=$((last_tag + 1))
          new_tag="v${new_version}"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Generate secrets.h
        run: |
          echo '#ifndef SECRETS_H' > secrets.h
          echo '#define SECRETS_H' >> secrets.h
          echo '' >> secrets.h
          echo 'const char* ssid = "${{ secrets.WIFI_SSID }}";' >> secrets.h
          echo 'const char* password = "${{ secrets.WIFI_PASS }}";' >> secrets.h
          echo "const char* firmware_version = \"$new_tag\";" >> secrets.h
          echo '' >> secrets.h
          echo '#endif' >> secrets.h

      - name: Get crypto.h
        run: |
          echo "${{ secrets.CRYPTO_H }}" | base64 --decode > crypto.h

      - name: List available ESP32 boards
        run: arduino-cli board listall esp32

      - name: Compile firmware (ESP32 Generic)
        run: |
          arduino-cli compile \
            --fqbn esp32:esp32:esp32 \
            --build-property build.flags.optimize.lto=true \
            --build-property build.flags.optimize.size=true \
            --output-dir build

      - name: Encrypt firmware
        run: |
          BIN_FILE=$(ls build/*.bin)
          ENCRYPTED_BIN="build/firmware_encrypted.bin"
          echo "${{ secrets.ENCRYPT_SCRIPT }}" | base64 --decode > encrypt_firmware.py
          chmod +x encrypt_firmware.py
          python3 encrypt_firmware.py "$BIN_FILE" "$ENCRYPTED_BIN" "${{ secrets.ENCRYPT_TOKEN }}"
          mv "$ENCRYPTED_BIN" build/firmware.bin

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware-bin
          path: build/firmware.bin

      - name: Create GitHub Release and upload firmware
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: ESP32 Firmware Build ${{ github.run_number }}
          files: build/firmware.bin
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GHR_TOKEN }}
